version: "3"

services:
  printscript-service:
    container_name: "printscript-service"
    image: ghcr.io/tps-ingenieria-de-sistemas/printscript-service:latest
    ports:
      - "8080:8080"

  snippet-permits:
    container_name: "snippet-permits"
    image: ghcr.io/tps-ingenieria-de-sistemas/snippet-permits:latest
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_DOMAIN=snippet-permits-db
      - POSTGRES_DB=${PERMITS_POSTGRES_DB}
      - POSTGRES_USER=${PERMITS_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PERMITS_POSTGRES_PASSWORD}
      - AUTH0_API=${AUTH0_API}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
    depends_on:
      - snippet-permits-db

  snippet-permits-db:
    image: postgres:alpine
    container_name: "snippet-permits-db"
    restart: always
    environment:
      - POSTGRES_DB=${PERMITS_POSTGRES_DB}
      - POSTGRES_USER=${PERMITS_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PERMITS_POSTGRES_PASSWORD}
      - PGPORT=5433
    ports:
      - '5433:5433'
    volumes:
      - snippet-permits-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${PERMITS_POSTGRES_USER} -d ${PERMITS_POSTGRES_DB}' ]
      interval: 1s
      timeout: 1s
      retries: 15


  snippet-service:
    container_name: "snippet-service"
    image: ghcr.io/tps-ingenieria-de-sistemas/snippet-service:latest
    ports:
      - "8082:8082"

  asset-service:
    container_name: "asset-service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    ports:
      - "8083:8083"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_AGENT_ENABLED: false


  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

  nginx:
    image: nginx:latest
    container_name: "nginx"
    ports:
      - "80:80"
      - 443:443
    restart: always
    volumes:
      - ./conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot/:ro
    depends_on:
      - printscript-service
      - snippet-permits
      - snippet-service
      - asset-service

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt

  duckdns:
    image: lscr.io/linuxserver/duckdns:version-9fc9520a
    container_name: duckdns
    environment:
      - SUBDOMAINS=${SUBDOMAINS}
      - TOKEN=${DUCKDNS_TOKEN}
    restart: unless-stopped


volumes:
  blob:
    external: false
  snippet-permits-db-data:
